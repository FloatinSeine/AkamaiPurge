//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18052
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AkamaiApiProxy.AkamaiPurgeApi {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.akamai.com/purge", ConfigurationName="AkamaiPurgeApi.PurgeApi")]
    public interface PurgeApi {
        
        [System.ServiceModel.OperationContractAttribute(Action="", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(Style=System.ServiceModel.OperationFormatStyle.Rpc, SupportFaults=true, Use=System.ServiceModel.OperationFormatUse.Encoded)]
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        AkamaiApiProxy.AkamaiPurgeApi.PurgeResult purgeRequest(string name, string pwd, string network, string[] opt, string[] uri);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="", ReplyAction="*")]
        System.IAsyncResult BeginpurgeRequest(string name, string pwd, string network, string[] opt, string[] uri, System.AsyncCallback callback, object asyncState);
        
        [return: System.ServiceModel.MessageParameterAttribute(Name="return")]
        AkamaiApiProxy.AkamaiPurgeApi.PurgeResult EndpurgeRequest(System.IAsyncResult result);
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.18060")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.SoapTypeAttribute(Namespace="http://www.akamai.com/purge")]
    public partial class PurgeResult : object, System.ComponentModel.INotifyPropertyChanged {
        
        private int resultCodeField;
        
        private string resultMsgField;
        
        private string sessionIDField;
        
        private int estTimeField;
        
        private int uriIndexField;
        
        private string[] modifiersField;
        
        /// <remarks/>
        public int resultCode {
            get {
                return this.resultCodeField;
            }
            set {
                this.resultCodeField = value;
                this.RaisePropertyChanged("resultCode");
            }
        }
        
        /// <remarks/>
        public string resultMsg {
            get {
                return this.resultMsgField;
            }
            set {
                this.resultMsgField = value;
                this.RaisePropertyChanged("resultMsg");
            }
        }
        
        /// <remarks/>
        public string sessionID {
            get {
                return this.sessionIDField;
            }
            set {
                this.sessionIDField = value;
                this.RaisePropertyChanged("sessionID");
            }
        }
        
        /// <remarks/>
        public int estTime {
            get {
                return this.estTimeField;
            }
            set {
                this.estTimeField = value;
                this.RaisePropertyChanged("estTime");
            }
        }
        
        /// <remarks/>
        public int uriIndex {
            get {
                return this.uriIndexField;
            }
            set {
                this.uriIndexField = value;
                this.RaisePropertyChanged("uriIndex");
            }
        }
        
        /// <remarks/>
        public string[] modifiers {
            get {
                return this.modifiersField;
            }
            set {
                this.modifiersField = value;
                this.RaisePropertyChanged("modifiers");
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PurgeApiChannel : AkamaiApiProxy.AkamaiPurgeApi.PurgeApi, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class purgeRequestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public purgeRequestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public AkamaiApiProxy.AkamaiPurgeApi.PurgeResult Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((AkamaiApiProxy.AkamaiPurgeApi.PurgeResult)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PurgeApiClient : System.ServiceModel.ClientBase<AkamaiApiProxy.AkamaiPurgeApi.PurgeApi>, AkamaiApiProxy.AkamaiPurgeApi.PurgeApi {
        
        private BeginOperationDelegate onBeginpurgeRequestDelegate;
        
        private EndOperationDelegate onEndpurgeRequestDelegate;
        
        private System.Threading.SendOrPostCallback onpurgeRequestCompletedDelegate;
        
        public PurgeApiClient() {
        }
        
        public PurgeApiClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PurgeApiClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PurgeApiClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PurgeApiClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public event System.EventHandler<purgeRequestCompletedEventArgs> purgeRequestCompleted;
        
        public AkamaiApiProxy.AkamaiPurgeApi.PurgeResult purgeRequest(string name, string pwd, string network, string[] opt, string[] uri) {
            return base.Channel.purgeRequest(name, pwd, network, opt, uri);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public System.IAsyncResult BeginpurgeRequest(string name, string pwd, string network, string[] opt, string[] uri, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginpurgeRequest(name, pwd, network, opt, uri, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        public AkamaiApiProxy.AkamaiPurgeApi.PurgeResult EndpurgeRequest(System.IAsyncResult result) {
            return base.Channel.EndpurgeRequest(result);
        }
        
        private System.IAsyncResult OnBeginpurgeRequest(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string name = ((string)(inValues[0]));
            string pwd = ((string)(inValues[1]));
            string network = ((string)(inValues[2]));
            string[] opt = ((string[])(inValues[3]));
            string[] uri = ((string[])(inValues[4]));
            return this.BeginpurgeRequest(name, pwd, network, opt, uri, callback, asyncState);
        }
        
        private object[] OnEndpurgeRequest(System.IAsyncResult result) {
            AkamaiApiProxy.AkamaiPurgeApi.PurgeResult retVal = this.EndpurgeRequest(result);
            return new object[] {
                    retVal};
        }
        
        private void OnpurgeRequestCompleted(object state) {
            if ((this.purgeRequestCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.purgeRequestCompleted(this, new purgeRequestCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void purgeRequestAsync(string name, string pwd, string network, string[] opt, string[] uri) {
            this.purgeRequestAsync(name, pwd, network, opt, uri, null);
        }
        
        public void purgeRequestAsync(string name, string pwd, string network, string[] opt, string[] uri, object userState) {
            if ((this.onBeginpurgeRequestDelegate == null)) {
                this.onBeginpurgeRequestDelegate = new BeginOperationDelegate(this.OnBeginpurgeRequest);
            }
            if ((this.onEndpurgeRequestDelegate == null)) {
                this.onEndpurgeRequestDelegate = new EndOperationDelegate(this.OnEndpurgeRequest);
            }
            if ((this.onpurgeRequestCompletedDelegate == null)) {
                this.onpurgeRequestCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnpurgeRequestCompleted);
            }
            base.InvokeAsync(this.onBeginpurgeRequestDelegate, new object[] {
                        name,
                        pwd,
                        network,
                        opt,
                        uri}, this.onEndpurgeRequestDelegate, this.onpurgeRequestCompletedDelegate, userState);
        }
    }
}
